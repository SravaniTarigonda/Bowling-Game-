==259461== Memcheck, a memory error detector
==259461== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==259461== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==259461== Command: ./test
==259461== 
==259461== Syscall param write(buf) points to uninitialised byte(s)
==259461==    at 0x495CF6F: __libc_write (write.c:26)
==259461==    by 0x495CF6F: write (write.c:24)
==259461==    by 0x48EE664: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1181)
==259461==    by 0x48ED9D5: new_do_write (fileops.c:449)
==259461==    by 0x48EF708: _IO_new_do_write (fileops.c:426)
==259461==    by 0x48EF708: _IO_do_write@@GLIBC_2.2.5 (fileops.c:423)
==259461==    by 0x48EEFEF: _IO_file_close_it@@GLIBC_2.2.5 (fileops.c:136)
==259461==    by 0x48E2375: fclose@@GLIBC_2.2.5 (iofclose.c:53)
==259461==    by 0x109482: list_to_bowler (in /home/cguser25/ProjectBowlingGame/CUT/Code/SRC/test)
==259461==    by 0x10AF3A: main (in /home/cguser25/ProjectBowlingGame/CUT/Code/SRC/test)
==259461==  Address 0x4a39818 is 168 bytes inside a block of size 4,096 alloc'd
==259461==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==259461==    by 0x48E213B: _IO_file_doallocate (filedoalloc.c:101)
==259461==    by 0x48F0A4F: _IO_doallocbuf (genops.c:347)
==259461==    by 0x48F0A4F: _IO_doallocbuf (genops.c:342)
==259461==    by 0x48EFBF7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:745)
==259461==    by 0x48EECDD: _IO_new_file_xsputn (fileops.c:1244)
==259461==    by 0x48EECDD: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==259461==    by 0x48E35BC: fwrite (iofwrite.c:39)
==259461==    by 0x109463: list_to_bowler (in /home/cguser25/ProjectBowlingGame/CUT/Code/SRC/test)
==259461==    by 0x10AF3A: main (in /home/cguser25/ProjectBowlingGame/CUT/Code/SRC/test)
==259461== 
==259461== 
==259461== HEAP SUMMARY:
==259461==     in use at exit: 648 bytes in 9 blocks
==259461==   total heap usage: 23 allocs, 14 frees, 21,432 bytes allocated
==259461== 
==259461== LEAK SUMMARY:
==259461==    definitely lost: 0 bytes in 0 blocks
==259461==    indirectly lost: 0 bytes in 0 blocks
==259461==      possibly lost: 0 bytes in 0 blocks
==259461==    still reachable: 648 bytes in 9 blocks
==259461==         suppressed: 0 bytes in 0 blocks
==259461== Rerun with --leak-check=full to see details of leaked memory
==259461== 
==259461== Use --track-origins=yes to see where uninitialised values come from
==259461== For lists of detected and suppressed errors, rerun with: -s
==259461== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
